"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/components/Compute.tsx":
/*!************************************!*\
  !*** ./app/components/Compute.tsx ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Compute: function() { return /* binding */ Compute; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @nillion/client-core */ \"(app-pages-browser)/./node_modules/@nillion/client-core/dist/index.mjs\");\n/* harmony import */ var _nillion_client_react_hooks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @nillion/client-react-hooks */ \"(app-pages-browser)/./node_modules/@nillion/client-react-hooks/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ Compute auto */ \nvar _s = $RefreshSig$();\n\n\n\nconst Compute = ()=>{\n    _s();\n    const { client } = (0,_nillion_client_react_hooks__WEBPACK_IMPORTED_MODULE_3__.useNillion)();\n    const nilCompute = (0,_nillion_client_react_hooks__WEBPACK_IMPORTED_MODULE_3__.useNilCompute)();\n    const [programId, setProgramId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [player1Choice, setPlayer1Choice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [player1Guess, setPlayer1Guess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [player2Choice, setPlayer2Choice] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Computer's choice\n    const [player2Guess, setPlayer2Guess] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Computer's guess\n    const [result, setResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const playGame = async ()=>{\n        if (!programId) {\n            throw new Error(\"Program ID is required for computation.\");\n        }\n        // For demo purposes, simulate computer choice and guess\n        const computerChoice = Math.floor(Math.random() * 6); // Choices between 0 and 5\n        const computerGuess = Math.floor(Math.random() * 12); // Guesses the sum (0-10)\n        setPlayer2Choice(computerChoice);\n        setPlayer2Guess(computerGuess);\n        const bindings = _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.ProgramBindings.create(programId).addInputParty(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.PartyName.parse(\"Player_1\"), client.partyId).addInputParty(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.PartyName.parse(\"Player_2\"), client.partyId);\n        const values = _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NadaValues.create().insert(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NamedValue.parse(\"choice_player_1\"), _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NadaValue.createSecretInteger(player1Choice || 0)).insert(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NamedValue.parse(\"guess_player_1\"), _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NadaValue.createSecretInteger(player1Guess || 0)).insert(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NamedValue.parse(\"choice_player_2\"), _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NadaValue.createSecretInteger(computerChoice)).insert(_nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NamedValue.parse(\"guess_player_2\"), _nillion_client_core__WEBPACK_IMPORTED_MODULE_2__.NadaValue.createSecretInteger(computerGuess));\n        const result = await nilCompute.execute({\n            bindings,\n            values\n        });\n        if (result.isSuccess) {\n            const roundWinner = result.data; // This should return 0, 1, or 2 based on the contract\n            switch(roundWinner){\n                case 0:\n                    setResult(\"It's a tie!\");\n                    break;\n                case 1:\n                    setResult(\"Player 1 wins the round!\");\n                    break;\n                case 2:\n                    setResult(\"Player 2 (Computer) wins the round!\");\n                    break;\n                default:\n                    setResult(\"Error: Unknown outcome.\");\n                    break;\n            }\n        } else {\n            setResult(\"Error processing game result.\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"border border-gray-400 rounded-lg p-4 w-full max-w-md\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                className: \"text-2xl font-bold mb-4\",\n                children: \"Morra Game\"\n            }, void 0, false, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 72,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                className: \"w-full p-2 mb-4 border border-gray-300 rounded text-black\",\n                placeholder: \"Program ID\",\n                value: programId,\n                onChange: (e)=>setProgramId(e.target.value)\n            }, void 0, false, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 74,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                max: \"5\",\n                className: \"w-full p-2 mb-4 border border-gray-300 rounded text-black\",\n                placeholder: \"Player 1 Choice (0-5)\",\n                onChange: (e)=>setPlayer1Choice(parseInt(e.target.value))\n            }, void 0, false, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 81,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                className: \"w-full p-2 mb-4 border border-gray-300 rounded text-black\",\n                placeholder: \"Player 1 Guess (0-10)\",\n                onChange: (e)=>setPlayer1Guess(parseInt(e.target.value))\n            }, void 0, false, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 90,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                className: \"px-4 py-2 border rounded text-black mb-4 \".concat(nilCompute.isLoading || !programId ? \"opacity-50 cursor-not-allowed bg-gray-200\" : \"bg-white hover:bg-gray-100\"),\n                onClick: playGame,\n                disabled: nilCompute.isLoading || !programId,\n                children: nilCompute.isLoading ? \"Loading...\" : \"Play\"\n            }, void 0, false, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 98,\n                columnNumber: 7\n            }, undefined),\n            result && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-lg mt-4\",\n                children: [\n                    result,\n                    \" (Your Choice: \",\n                    player1Choice,\n                    \" - Your Guess: \",\n                    player1Guess,\n                    \" - Computer Choice: \",\n                    player2Choice,\n                    \" - Computer Guess: \",\n                    player2Guess,\n                    \")\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n                lineNumber: 109,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/hilary/Morragame/app/components/Compute.tsx\",\n        lineNumber: 71,\n        columnNumber: 5\n    }, undefined);\n}; // \"use client\";\n // import { FC, useState } from \"react\";\n // import { NadaValue, NadaValues, NamedValue, PartyName, ProgramBindings, ProgramId } from \"@nillion/client-core\";\n // import { useNilCompute, useNillion } from \"@nillion/client-react-hooks\";\n // export const MorraGame: FC = () => {\n //   const { client } = useNillion();\n //   const nilCompute = useNilCompute();\n //   const [programId, setProgramId] = useState<ProgramId | string>(\"\");\n //   const [userChoice, setUserChoice] = useState<number | null>(null);\n //   const [userGuess, setUserGuess] = useState<number | null>(null);\n //   const [computerChoice, setComputerChoice] = useState<number | null>(null);\n //   const [computerGuess, setComputerGuess] = useState<number | null>(null);\n //   const [result, setResult] = useState<string | null>(null);\n //   const playGame = () => {\n //     if (!programId || userChoice === null || userGuess === null) {\n //       throw new Error(\"Program ID, user choice, and user guess are required for computation.\");\n //     }\n //     // Computer's random choices for the round\n //     const compChoice = Math.floor(Math.random() * 5);  // Choices between 0-5\n //     const compGuess = Math.floor(Math.random() * 10);  // Guesses between 0-10\n //     setComputerChoice(compChoice);\n //     setComputerGuess(compGuess);\n //     // Setting up bindings with input for each player's choice and guess\n //     const bindings = ProgramBindings.create(programId)\n //       .addInputParty(PartyName.parse(\"Player_1\"), client.partyId)  // User as Player_1\n //       .addInputParty(PartyName.parse(\"Player_2\"), \"computer_party_id\")  // Placeholder ID for computer\n //       .addOutputParty(PartyName.parse(\"Player_1\"), client.partyId);\n //     // Passing user and computer choices and guesses as inputs to the smart contract\n //     const values = NadaValues.create()\n //       .insert(NamedValue.parse(\"choice_player_1\"), NadaValue.createSecretInteger(userChoice))\n //       .insert(NamedValue.parse(\"guess_player_1\"), NadaValue.createSecretInteger(userGuess))\n //       .insert(NamedValue.parse(\"choice_player_2\"), NadaValue.createSecretInteger(compChoice))\n //       .insert(NamedValue.parse(\"guess_player_2\"), NadaValue.createSecretInteger(compGuess));\n //     // Executing the compute function and setting the result based on the output\n //     nilCompute.execute({ bindings, values }).then((computeResult) => {\n //       if (computeResult.isSuccess) {\n //         const winner = computeResult.data;  // Contract output (0, 1, or 2)\n //         setResult(\n //           winner === \"1\"\n //             ? \"You won the round!\"\n //             : winner === \"2\"\n //             ? \"Computer won the round.\"\n //             : \"It's a tie!\"\n //         );\n //       } else {\n //         setResult(\"Error processing game result.\");\n //       }\n //     });\n //   };\n //   return (\n //     <div className=\"border border-gray-400 rounded-lg p-4 w-full max-w-md\">\n //       <h2 className=\"text-2xl font-bold mb-4\">Morra Game</h2>\n //       <input\n //         className=\"w-full p-2 mb-4 border border-gray-300 rounded text-black\"\n //         placeholder=\"Program id\"\n //         value={programId}\n //         onChange={(e) => setProgramId(e.target.value)}\n //       />\n //       <input\n //         type=\"number\"\n //         min=\"0\"\n //         max=\"5\"\n //         className=\"w-full p-2 mb-4 border border-gray-300 rounded text-black\"\n //         placeholder=\"Enter your choice (0-5)\"\n //         onChange={(e) => setUserChoice(parseInt(e.target.value))}\n // \"use client\";\n // import { FC, useState } from \"react\";\n // import {\n //   NadaValue,\n //   NadaValues,\n //   NamedValue,\n //   PartyName,\n //   ProgramBindings,\n //   ProgramId,\n // } from \"@nillion/client-core\";\n // import { useNilCompute, useNillion } from \"@nillion/client-react-hooks\";\n // export const Compute: FC = () => {\n //   const { client } = useNillion();\n //   const [playerMove, setPlayerMove] = useState<number | null>(null);\n //   const [opponentMove, setOpponentMove] = useState<number | null>(null);\n //   const [gameResult, setGameResult] = useState<string | null>(null);\n //   const [loading, setLoading] = useState(false);\n //   const handleMoveSubmission = async () => {\n //     if (playerMove === null) {\n //       alert(\"Please choose a move!\");\n //       return;\n //     }\n //     setLoading(true);\n //     try {\n //       // Execute game logic with `nilCompute.execute` (replace with actual logic)\n //       const result = await someMorraGameExecutionLogic(client, playerMove); \n //       setOpponentMove(result.opponentMove);\n //       setGameResult(result.gameResult);\n //     } catch (error) {\n //       console.error(\"Error executing Morra Game:\", error);\n //       setGameResult(\"An error occurred.\");\n //     } finally {\n //       setLoading(false);\n //     }\n //   };\n //   return (\n //     <div className=\"border border-gray-400 rounded-lg p-4 w-full max-w-md\">\n //       <h2 className=\"text-2xl font-bold mb-4\">Morra Game</h2>\n //       <p className=\"mb-4\">Choose a move (number of fingers shown):</p>\n //       <div className=\"flex gap-2 mb-4\">\n //         {[0, 1, 2, 3, 4, 5].map((num) => (\n //           <button\n //             key={num}\n //             onClick={() => setPlayerMove(num)}\n //             className={`px-4 py-2 border rounded ${\n //               playerMove === num ? \"bg-blue-500 text-white\" : \"bg-gray-200 text-black\"\n //             }`}\n //           >\n //             {num}\n //           </button>\n //         ))}\n //       </div>\n //       <button\n //         onClick={handleMoveSubmission}\n //         disabled={loading || playerMove === null}\n //         className={`px-4 py-2 border rounded ${\n //           loading || playerMove === null\n //             ? \"opacity-50 cursor-not-allowed bg-gray-200\"\n //             : \"bg-white hover:bg-gray-100\"\n //         }`}\n //       >\n //         {loading ? (\n //           <div className=\"w-5 h-5 border-t-2 border-b-2 border-gray-900 rounded-full animate-spin\"></div>\n //         ) : (\n //           \"Submit Move\"\n //         )}\n //       </button>\n //       {gameResult && (\n //         <div className=\"mt-4 p-4 border-t\">\n //           <p>Your Move: {playerMove}</p>\n //           <p>Opponent's Move: {opponentMove}</p>\n //           <p>Result: {gameResult}</p>\n //         </div>\n //       )}\n //     </div>\n //   );\n // };\n // // Dummy async function for handling game logic\n // async function someMorraGameExecutionLogic(client : any, playerMove: number) {\n //   // Replace this with actual game computation logic.\n //   const opponentMove = Math.floor(Math.random() * 6);\n //   const gameResult =\n //     playerMove === opponentMove\n //       ? \"It's a tie!\"\n //       : playerMove > opponentMove\n //       ? \"You win!\"\n //       : \"You lose!\";\n //   return { opponentMove, gameResult };\n // }\n_s(Compute, \"drUopKi0ecSXM6TuysnhRYIFfrc=\", false, function() {\n    return [\n        _nillion_client_react_hooks__WEBPACK_IMPORTED_MODULE_3__.useNillion,\n        _nillion_client_react_hooks__WEBPACK_IMPORTED_MODULE_3__.useNilCompute\n    ];\n});\n_c = Compute;\nvar _c;\n$RefreshReg$(_c, \"Compute\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9jb21wb25lbnRzL0NvbXB1dGUudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBV3FDO0FBQzJFO0FBQ3hDO0FBRWpFLE1BQU1RLFVBQWM7O0lBQ3pCLE1BQU0sRUFBRUMsTUFBTSxFQUFFLEdBQUdGLHVFQUFVQTtJQUM3QixNQUFNRyxhQUFhSiwwRUFBYUE7SUFDaEMsTUFBTSxDQUFDSyxXQUFXQyxhQUFhLEdBQUdaLCtDQUFRQSxDQUFxQjtJQUMvRCxNQUFNLENBQUNhLGVBQWVDLGlCQUFpQixHQUFHZCwrQ0FBUUEsQ0FBZ0I7SUFDbEUsTUFBTSxDQUFDZSxjQUFjQyxnQkFBZ0IsR0FBR2hCLCtDQUFRQSxDQUFnQjtJQUNoRSxNQUFNLENBQUNpQixlQUFlQyxpQkFBaUIsR0FBR2xCLCtDQUFRQSxDQUFnQixPQUFPLG9CQUFvQjtJQUM3RixNQUFNLENBQUNtQixjQUFjQyxnQkFBZ0IsR0FBR3BCLCtDQUFRQSxDQUFnQixPQUFTLG1CQUFtQjtJQUM1RixNQUFNLENBQUNxQixRQUFRQyxVQUFVLEdBQUd0QiwrQ0FBUUEsQ0FBZ0I7SUFFcEQsTUFBTXVCLFdBQVc7UUFDZixJQUFJLENBQUNaLFdBQVc7WUFDZCxNQUFNLElBQUlhLE1BQU07UUFDbEI7UUFFQSx3REFBd0Q7UUFDeEQsTUFBTUMsaUJBQWlCQyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBSyxJQUFJLDBCQUEwQjtRQUNoRixNQUFNQyxnQkFBZ0JILEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLLEtBQU0seUJBQXlCO1FBQ2hGVixpQkFBaUJPO1FBQ2pCTCxnQkFBZ0JTO1FBRWhCLE1BQU1DLFdBQVd6QixpRUFBZUEsQ0FBQzBCLE1BQU0sQ0FBQ3BCLFdBQ3JDcUIsYUFBYSxDQUFDNUIsMkRBQVNBLENBQUM2QixLQUFLLENBQUMsYUFBYXhCLE9BQU95QixPQUFPLEVBQ3pERixhQUFhLENBQUM1QiwyREFBU0EsQ0FBQzZCLEtBQUss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OEU7Q0FDOUUsZ0VBQWdFO0NBQ2hFLHlFQUF5RTtDQUN6RSwwQ0FBMEM7Q0FDMUMsNkNBQTZDO0NBQzdDLG9CQUFvQjtDQUNwQix3QkFBd0I7Q0FDeEIsaURBQWlEO0NBQ2pELHNEQUFzRDtDQUN0RCx5RkFBeUY7Q0FDekYsa0JBQWtCO0NBQ2xCLGNBQWM7Q0FDZCxvQkFBb0I7Q0FDcEIsc0JBQXNCO0NBQ3RCLGNBQWM7Q0FDZCxlQUFlO0NBQ2YsZ0JBQWdCO0NBQ2hCLHlDQUF5QztDQUN6QyxvREFBb0Q7Q0FDcEQsa0RBQWtEO0NBQ2xELDJDQUEyQztDQUMzQyw0REFBNEQ7Q0FDNUQsNkNBQTZDO0NBQzdDLGNBQWM7Q0FDZCxVQUFVO0NBQ1YsdUJBQXVCO0NBQ3ZCLDRHQUE0RztDQUM1RyxnQkFBZ0I7Q0FDaEIsMEJBQTBCO0NBQzFCLGFBQWE7Q0FDYixrQkFBa0I7Q0FDbEIseUJBQXlCO0NBQ3pCLDhDQUE4QztDQUM5QywyQ0FBMkM7Q0FDM0MsbURBQW1EO0NBQ25ELHdDQUF3QztDQUN4QyxpQkFBaUI7Q0FDakIsV0FBVztDQUNYLGFBQWE7Q0FDYixPQUFPO0NBQ1AsS0FBSztDQUVMLGtEQUFrRDtDQUNsRCxpRkFBaUY7Q0FDakYsd0RBQXdEO0NBQ3hELHdEQUF3RDtDQUN4RCx1QkFBdUI7Q0FDdkIsa0NBQWtDO0NBQ2xDLHdCQUF3QjtDQUN4QixvQ0FBb0M7Q0FDcEMscUJBQXFCO0NBQ3JCLHVCQUF1QjtDQUN2Qix5Q0FBeUM7Q0FDekMsSUFBSTtHQXhXU1g7O1FBQ1FELG1FQUFVQTtRQUNWRCxzRUFBYUE7OztLQUZyQkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL2NvbXBvbmVudHMvQ29tcHV0ZS50c3g/ZmJhOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcblxuXG5cblxuXG5cblxuXG5cInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgRkMsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBOYWRhVmFsdWUsIE5hZGFWYWx1ZXMsIE5hbWVkVmFsdWUsIFBhcnR5TmFtZSwgUHJvZ3JhbUJpbmRpbmdzLCBQcm9ncmFtSWQgfSBmcm9tIFwiQG5pbGxpb24vY2xpZW50LWNvcmVcIjtcbmltcG9ydCB7IHVzZU5pbENvbXB1dGUsIHVzZU5pbGxpb24gfSBmcm9tIFwiQG5pbGxpb24vY2xpZW50LXJlYWN0LWhvb2tzXCI7XG5cbmV4cG9ydCBjb25zdCBDb21wdXRlOiBGQyA9ICgpID0+IHtcbiAgY29uc3QgeyBjbGllbnQgfSA9IHVzZU5pbGxpb24oKTtcbiAgY29uc3QgbmlsQ29tcHV0ZSA9IHVzZU5pbENvbXB1dGUoKTtcbiAgY29uc3QgW3Byb2dyYW1JZCwgc2V0UHJvZ3JhbUlkXSA9IHVzZVN0YXRlPFByb2dyYW1JZCB8IHN0cmluZz4oXCJcIik7XG4gIGNvbnN0IFtwbGF5ZXIxQ2hvaWNlLCBzZXRQbGF5ZXIxQ2hvaWNlXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuICBjb25zdCBbcGxheWVyMUd1ZXNzLCBzZXRQbGF5ZXIxR3Vlc3NdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtwbGF5ZXIyQ2hvaWNlLCBzZXRQbGF5ZXIyQ2hvaWNlXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpOyAvLyBDb21wdXRlcidzIGNob2ljZVxuICBjb25zdCBbcGxheWVyMkd1ZXNzLCBzZXRQbGF5ZXIyR3Vlc3NdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7ICAgLy8gQ29tcHV0ZXIncyBndWVzc1xuICBjb25zdCBbcmVzdWx0LCBzZXRSZXN1bHRdID0gdXNlU3RhdGU8c3RyaW5nIHwgbnVsbD4obnVsbCk7XG4gIFxuICBjb25zdCBwbGF5R2FtZSA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXByb2dyYW1JZCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUHJvZ3JhbSBJRCBpcyByZXF1aXJlZCBmb3IgY29tcHV0YXRpb24uXCIpO1xuICAgIH1cbiAgICBcbiAgICAvLyBGb3IgZGVtbyBwdXJwb3Nlcywgc2ltdWxhdGUgY29tcHV0ZXIgY2hvaWNlIGFuZCBndWVzc1xuICAgIGNvbnN0IGNvbXB1dGVyQ2hvaWNlID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNik7IC8vIENob2ljZXMgYmV0d2VlbiAwIGFuZCA1XG4gICAgY29uc3QgY29tcHV0ZXJHdWVzcyA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEyKTsgIC8vIEd1ZXNzZXMgdGhlIHN1bSAoMC0xMClcbiAgICBzZXRQbGF5ZXIyQ2hvaWNlKGNvbXB1dGVyQ2hvaWNlKTtcbiAgICBzZXRQbGF5ZXIyR3Vlc3MoY29tcHV0ZXJHdWVzcyk7XG5cbiAgICBjb25zdCBiaW5kaW5ncyA9IFByb2dyYW1CaW5kaW5ncy5jcmVhdGUocHJvZ3JhbUlkKVxuICAgICAgLmFkZElucHV0UGFydHkoUGFydHlOYW1lLnBhcnNlKFwiUGxheWVyXzFcIiksIGNsaWVudC5wYXJ0eUlkKVxuICAgICAgLmFkZElucHV0UGFydHkoUGFydHlOYW1lLnBhcnNlKFwiUGxheWVyXzJcIiksIGNsaWVudC5wYXJ0eUlkKTtcblxuICAgIGNvbnN0IHZhbHVlcyA9IE5hZGFWYWx1ZXMuY3JlYXRlKClcbiAgICAgIC5pbnNlcnQoTmFtZWRWYWx1ZS5wYXJzZShcImNob2ljZV9wbGF5ZXJfMVwiKSwgTmFkYVZhbHVlLmNyZWF0ZVNlY3JldEludGVnZXIocGxheWVyMUNob2ljZSB8fCAwKSlcbiAgICAgIC5pbnNlcnQoTmFtZWRWYWx1ZS5wYXJzZShcImd1ZXNzX3BsYXllcl8xXCIpLCBOYWRhVmFsdWUuY3JlYXRlU2VjcmV0SW50ZWdlcihwbGF5ZXIxR3Vlc3MgfHwgMCkpXG4gICAgICAuaW5zZXJ0KE5hbWVkVmFsdWUucGFyc2UoXCJjaG9pY2VfcGxheWVyXzJcIiksIE5hZGFWYWx1ZS5jcmVhdGVTZWNyZXRJbnRlZ2VyKGNvbXB1dGVyQ2hvaWNlKSlcbiAgICAgIC5pbnNlcnQoTmFtZWRWYWx1ZS5wYXJzZShcImd1ZXNzX3BsYXllcl8yXCIpLCBOYWRhVmFsdWUuY3JlYXRlU2VjcmV0SW50ZWdlcihjb21wdXRlckd1ZXNzKSk7XG5cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBuaWxDb21wdXRlLmV4ZWN1dGUoeyBiaW5kaW5ncywgdmFsdWVzIH0pO1xuICAgIFxuICAgIGlmIChyZXN1bHQuaXNTdWNjZXNzKSB7XG4gICAgICBjb25zdCByb3VuZFdpbm5lciA9IHJlc3VsdC5kYXRhOyAvLyBUaGlzIHNob3VsZCByZXR1cm4gMCwgMSwgb3IgMiBiYXNlZCBvbiB0aGUgY29udHJhY3RcbiAgICAgIHN3aXRjaCAocm91bmRXaW5uZXIpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIHNldFJlc3VsdChcIkl0J3MgYSB0aWUhXCIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAgc2V0UmVzdWx0KFwiUGxheWVyIDEgd2lucyB0aGUgcm91bmQhXCIpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgc2V0UmVzdWx0KFwiUGxheWVyIDIgKENvbXB1dGVyKSB3aW5zIHRoZSByb3VuZCFcIik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgc2V0UmVzdWx0KFwiRXJyb3I6IFVua25vd24gb3V0Y29tZS5cIik7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHNldFJlc3VsdChcIkVycm9yIHByb2Nlc3NpbmcgZ2FtZSByZXN1bHQuXCIpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiYm9yZGVyIGJvcmRlci1ncmF5LTQwMCByb3VuZGVkLWxnIHAtNCB3LWZ1bGwgbWF4LXctbWRcIj5cbiAgICAgIDxoMiBjbGFzc05hbWU9XCJ0ZXh0LTJ4bCBmb250LWJvbGQgbWItNFwiPk1vcnJhIEdhbWU8L2gyPlxuICAgICAgXG4gICAgICA8aW5wdXRcbiAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHAtMiBtYi00IGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZCB0ZXh0LWJsYWNrXCJcbiAgICAgICAgcGxhY2Vob2xkZXI9XCJQcm9ncmFtIElEXCJcbiAgICAgICAgdmFsdWU9e3Byb2dyYW1JZH1cbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRQcm9ncmFtSWQoZS50YXJnZXQudmFsdWUpfVxuICAgICAgLz5cblxuICAgICAgPGlucHV0XG4gICAgICAgIHR5cGU9XCJudW1iZXJcIlxuICAgICAgICBtaW49XCIwXCJcbiAgICAgICAgbWF4PVwiNVwiXG4gICAgICAgIGNsYXNzTmFtZT1cInctZnVsbCBwLTIgbWItNCBib3JkZXIgYm9yZGVyLWdyYXktMzAwIHJvdW5kZWQgdGV4dC1ibGFja1wiXG4gICAgICAgIHBsYWNlaG9sZGVyPVwiUGxheWVyIDEgQ2hvaWNlICgwLTUpXCJcbiAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiBzZXRQbGF5ZXIxQ2hvaWNlKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAvPlxuXG4gICAgICA8aW5wdXRcbiAgICAgICAgdHlwZT1cIm51bWJlclwiXG4gICAgICAgIG1pbj1cIjBcIlxuICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcC0yIG1iLTQgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkIHRleHQtYmxhY2tcIlxuICAgICAgICBwbGFjZWhvbGRlcj1cIlBsYXllciAxIEd1ZXNzICgwLTEwKVwiXG4gICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0UGxheWVyMUd1ZXNzKHBhcnNlSW50KGUudGFyZ2V0LnZhbHVlKSl9XG4gICAgICAvPlxuXG4gICAgICA8YnV0dG9uXG4gICAgICAgIGNsYXNzTmFtZT17YHB4LTQgcHktMiBib3JkZXIgcm91bmRlZCB0ZXh0LWJsYWNrIG1iLTQgJHtcbiAgICAgICAgICBuaWxDb21wdXRlLmlzTG9hZGluZyB8fCAhcHJvZ3JhbUlkID8gXCJvcGFjaXR5LTUwIGN1cnNvci1ub3QtYWxsb3dlZCBiZy1ncmF5LTIwMFwiIDogXCJiZy13aGl0ZSBob3ZlcjpiZy1ncmF5LTEwMFwiXG4gICAgICAgIH1gfVxuICAgICAgICBvbkNsaWNrPXtwbGF5R2FtZX1cbiAgICAgICAgZGlzYWJsZWQ9e25pbENvbXB1dGUuaXNMb2FkaW5nIHx8ICFwcm9ncmFtSWR9XG4gICAgICA+XG4gICAgICAgIHtuaWxDb21wdXRlLmlzTG9hZGluZyA/IFwiTG9hZGluZy4uLlwiIDogXCJQbGF5XCJ9XG4gICAgICA8L2J1dHRvbj5cblxuICAgICAge3Jlc3VsdCAmJiAoXG4gICAgICAgIDxwIGNsYXNzTmFtZT1cInRleHQtbGcgbXQtNFwiPlxuICAgICAgICAgIHtyZXN1bHR9IChZb3VyIENob2ljZToge3BsYXllcjFDaG9pY2V9IC0gWW91ciBHdWVzczoge3BsYXllcjFHdWVzc30gLSBDb21wdXRlciBDaG9pY2U6IHtwbGF5ZXIyQ2hvaWNlfSAtIENvbXB1dGVyIEd1ZXNzOiB7cGxheWVyMkd1ZXNzfSlcbiAgICAgICAgPC9wPlxuICAgICAgKX1cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBcInVzZSBjbGllbnRcIjtcblxuLy8gaW1wb3J0IHsgRkMsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG4vLyBpbXBvcnQgeyBOYWRhVmFsdWUsIE5hZGFWYWx1ZXMsIE5hbWVkVmFsdWUsIFBhcnR5TmFtZSwgUHJvZ3JhbUJpbmRpbmdzLCBQcm9ncmFtSWQgfSBmcm9tIFwiQG5pbGxpb24vY2xpZW50LWNvcmVcIjtcbi8vIGltcG9ydCB7IHVzZU5pbENvbXB1dGUsIHVzZU5pbGxpb24gfSBmcm9tIFwiQG5pbGxpb24vY2xpZW50LXJlYWN0LWhvb2tzXCI7XG5cbi8vIGV4cG9ydCBjb25zdCBNb3JyYUdhbWU6IEZDID0gKCkgPT4ge1xuLy8gICBjb25zdCB7IGNsaWVudCB9ID0gdXNlTmlsbGlvbigpO1xuLy8gICBjb25zdCBuaWxDb21wdXRlID0gdXNlTmlsQ29tcHV0ZSgpO1xuLy8gICBjb25zdCBbcHJvZ3JhbUlkLCBzZXRQcm9ncmFtSWRdID0gdXNlU3RhdGU8UHJvZ3JhbUlkIHwgc3RyaW5nPihcIlwiKTtcbi8vICAgY29uc3QgW3VzZXJDaG9pY2UsIHNldFVzZXJDaG9pY2VdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7XG4vLyAgIGNvbnN0IFt1c2VyR3Vlc3MsIHNldFVzZXJHdWVzc10gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbi8vICAgY29uc3QgW2NvbXB1dGVyQ2hvaWNlLCBzZXRDb21wdXRlckNob2ljZV0gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbi8vICAgY29uc3QgW2NvbXB1dGVyR3Vlc3MsIHNldENvbXB1dGVyR3Vlc3NdID0gdXNlU3RhdGU8bnVtYmVyIHwgbnVsbD4obnVsbCk7XG4vLyAgIGNvbnN0IFtyZXN1bHQsIHNldFJlc3VsdF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcblxuLy8gICBjb25zdCBwbGF5R2FtZSA9ICgpID0+IHtcbi8vICAgICBpZiAoIXByb2dyYW1JZCB8fCB1c2VyQ2hvaWNlID09PSBudWxsIHx8IHVzZXJHdWVzcyA9PT0gbnVsbCkge1xuLy8gICAgICAgdGhyb3cgbmV3IEVycm9yKFwiUHJvZ3JhbSBJRCwgdXNlciBjaG9pY2UsIGFuZCB1c2VyIGd1ZXNzIGFyZSByZXF1aXJlZCBmb3IgY29tcHV0YXRpb24uXCIpO1xuLy8gICAgIH1cblxuLy8gICAgIC8vIENvbXB1dGVyJ3MgcmFuZG9tIGNob2ljZXMgZm9yIHRoZSByb3VuZFxuLy8gICAgIGNvbnN0IGNvbXBDaG9pY2UgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KTsgIC8vIENob2ljZXMgYmV0d2VlbiAwLTVcbi8vICAgICBjb25zdCBjb21wR3Vlc3MgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7ICAvLyBHdWVzc2VzIGJldHdlZW4gMC0xMFxuLy8gICAgIHNldENvbXB1dGVyQ2hvaWNlKGNvbXBDaG9pY2UpO1xuLy8gICAgIHNldENvbXB1dGVyR3Vlc3MoY29tcEd1ZXNzKTtcblxuLy8gICAgIC8vIFNldHRpbmcgdXAgYmluZGluZ3Mgd2l0aCBpbnB1dCBmb3IgZWFjaCBwbGF5ZXIncyBjaG9pY2UgYW5kIGd1ZXNzXG4vLyAgICAgY29uc3QgYmluZGluZ3MgPSBQcm9ncmFtQmluZGluZ3MuY3JlYXRlKHByb2dyYW1JZClcbi8vICAgICAgIC5hZGRJbnB1dFBhcnR5KFBhcnR5TmFtZS5wYXJzZShcIlBsYXllcl8xXCIpLCBjbGllbnQucGFydHlJZCkgIC8vIFVzZXIgYXMgUGxheWVyXzFcbi8vICAgICAgIC5hZGRJbnB1dFBhcnR5KFBhcnR5TmFtZS5wYXJzZShcIlBsYXllcl8yXCIpLCBcImNvbXB1dGVyX3BhcnR5X2lkXCIpICAvLyBQbGFjZWhvbGRlciBJRCBmb3IgY29tcHV0ZXJcbi8vICAgICAgIC5hZGRPdXRwdXRQYXJ0eShQYXJ0eU5hbWUucGFyc2UoXCJQbGF5ZXJfMVwiKSwgY2xpZW50LnBhcnR5SWQpO1xuXG4vLyAgICAgLy8gUGFzc2luZyB1c2VyIGFuZCBjb21wdXRlciBjaG9pY2VzIGFuZCBndWVzc2VzIGFzIGlucHV0cyB0byB0aGUgc21hcnQgY29udHJhY3Rcbi8vICAgICBjb25zdCB2YWx1ZXMgPSBOYWRhVmFsdWVzLmNyZWF0ZSgpXG4vLyAgICAgICAuaW5zZXJ0KE5hbWVkVmFsdWUucGFyc2UoXCJjaG9pY2VfcGxheWVyXzFcIiksIE5hZGFWYWx1ZS5jcmVhdGVTZWNyZXRJbnRlZ2VyKHVzZXJDaG9pY2UpKVxuLy8gICAgICAgLmluc2VydChOYW1lZFZhbHVlLnBhcnNlKFwiZ3Vlc3NfcGxheWVyXzFcIiksIE5hZGFWYWx1ZS5jcmVhdGVTZWNyZXRJbnRlZ2VyKHVzZXJHdWVzcykpXG4vLyAgICAgICAuaW5zZXJ0KE5hbWVkVmFsdWUucGFyc2UoXCJjaG9pY2VfcGxheWVyXzJcIiksIE5hZGFWYWx1ZS5jcmVhdGVTZWNyZXRJbnRlZ2VyKGNvbXBDaG9pY2UpKVxuLy8gICAgICAgLmluc2VydChOYW1lZFZhbHVlLnBhcnNlKFwiZ3Vlc3NfcGxheWVyXzJcIiksIE5hZGFWYWx1ZS5jcmVhdGVTZWNyZXRJbnRlZ2VyKGNvbXBHdWVzcykpO1xuXG4vLyAgICAgLy8gRXhlY3V0aW5nIHRoZSBjb21wdXRlIGZ1bmN0aW9uIGFuZCBzZXR0aW5nIHRoZSByZXN1bHQgYmFzZWQgb24gdGhlIG91dHB1dFxuLy8gICAgIG5pbENvbXB1dGUuZXhlY3V0ZSh7IGJpbmRpbmdzLCB2YWx1ZXMgfSkudGhlbigoY29tcHV0ZVJlc3VsdCkgPT4ge1xuLy8gICAgICAgaWYgKGNvbXB1dGVSZXN1bHQuaXNTdWNjZXNzKSB7XG4vLyAgICAgICAgIGNvbnN0IHdpbm5lciA9IGNvbXB1dGVSZXN1bHQuZGF0YTsgIC8vIENvbnRyYWN0IG91dHB1dCAoMCwgMSwgb3IgMilcbi8vICAgICAgICAgc2V0UmVzdWx0KFxuLy8gICAgICAgICAgIHdpbm5lciA9PT0gXCIxXCJcbi8vICAgICAgICAgICAgID8gXCJZb3Ugd29uIHRoZSByb3VuZCFcIlxuLy8gICAgICAgICAgICAgOiB3aW5uZXIgPT09IFwiMlwiXG4vLyAgICAgICAgICAgICA/IFwiQ29tcHV0ZXIgd29uIHRoZSByb3VuZC5cIlxuLy8gICAgICAgICAgICAgOiBcIkl0J3MgYSB0aWUhXCJcbi8vICAgICAgICAgKTtcbi8vICAgICAgIH0gZWxzZSB7XG4vLyAgICAgICAgIHNldFJlc3VsdChcIkVycm9yIHByb2Nlc3NpbmcgZ2FtZSByZXN1bHQuXCIpO1xuLy8gICAgICAgfVxuLy8gICAgIH0pO1xuLy8gICB9O1xuXG4vLyAgIHJldHVybiAoXG4vLyAgICAgPGRpdiBjbGFzc05hbWU9XCJib3JkZXIgYm9yZGVyLWdyYXktNDAwIHJvdW5kZWQtbGcgcC00IHctZnVsbCBtYXgtdy1tZFwiPlxuLy8gICAgICAgPGgyIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtYm9sZCBtYi00XCI+TW9ycmEgR2FtZTwvaDI+XG5cbi8vICAgICAgIDxpbnB1dFxuLy8gICAgICAgICBjbGFzc05hbWU9XCJ3LWZ1bGwgcC0yIG1iLTQgYm9yZGVyIGJvcmRlci1ncmF5LTMwMCByb3VuZGVkIHRleHQtYmxhY2tcIlxuLy8gICAgICAgICBwbGFjZWhvbGRlcj1cIlByb2dyYW0gaWRcIlxuLy8gICAgICAgICB2YWx1ZT17cHJvZ3JhbUlkfVxuLy8gICAgICAgICBvbkNoYW5nZT17KGUpID0+IHNldFByb2dyYW1JZChlLnRhcmdldC52YWx1ZSl9XG4vLyAgICAgICAvPlxuXG4vLyAgICAgICA8aW5wdXRcbi8vICAgICAgICAgdHlwZT1cIm51bWJlclwiXG4vLyAgICAgICAgIG1pbj1cIjBcIlxuLy8gICAgICAgICBtYXg9XCI1XCJcbi8vICAgICAgICAgY2xhc3NOYW1lPVwidy1mdWxsIHAtMiBtYi00IGJvcmRlciBib3JkZXItZ3JheS0zMDAgcm91bmRlZCB0ZXh0LWJsYWNrXCJcbi8vICAgICAgICAgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIGNob2ljZSAoMC01KVwiXG4vLyAgICAgICAgIG9uQ2hhbmdlPXsoZSkgPT4gc2V0VXNlckNob2ljZShwYXJzZUludChlLnRhcmdldC52YWx1ZSkpfVxuICAgICBcblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG4vLyBcInVzZSBjbGllbnRcIjtcblxuLy8gaW1wb3J0IHsgRkMsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG4vLyBpbXBvcnQge1xuLy8gICBOYWRhVmFsdWUsXG4vLyAgIE5hZGFWYWx1ZXMsXG4vLyAgIE5hbWVkVmFsdWUsXG4vLyAgIFBhcnR5TmFtZSxcbi8vICAgUHJvZ3JhbUJpbmRpbmdzLFxuLy8gICBQcm9ncmFtSWQsXG4vLyB9IGZyb20gXCJAbmlsbGlvbi9jbGllbnQtY29yZVwiO1xuLy8gaW1wb3J0IHsgdXNlTmlsQ29tcHV0ZSwgdXNlTmlsbGlvbiB9IGZyb20gXCJAbmlsbGlvbi9jbGllbnQtcmVhY3QtaG9va3NcIjtcblxuLy8gZXhwb3J0IGNvbnN0IENvbXB1dGU6IEZDID0gKCkgPT4ge1xuLy8gICBjb25zdCB7IGNsaWVudCB9ID0gdXNlTmlsbGlvbigpO1xuLy8gICBjb25zdCBbcGxheWVyTW92ZSwgc2V0UGxheWVyTW92ZV0gPSB1c2VTdGF0ZTxudW1iZXIgfCBudWxsPihudWxsKTtcbi8vICAgY29uc3QgW29wcG9uZW50TW92ZSwgc2V0T3Bwb25lbnRNb3ZlXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xuLy8gICBjb25zdCBbZ2FtZVJlc3VsdCwgc2V0R2FtZVJlc3VsdF0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbi8vICAgY29uc3QgW2xvYWRpbmcsIHNldExvYWRpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG5cblxuXG4gIFxuLy8gICBjb25zdCBoYW5kbGVNb3ZlU3VibWlzc2lvbiA9IGFzeW5jICgpID0+IHtcbi8vICAgICBpZiAocGxheWVyTW92ZSA9PT0gbnVsbCkge1xuLy8gICAgICAgYWxlcnQoXCJQbGVhc2UgY2hvb3NlIGEgbW92ZSFcIik7XG4vLyAgICAgICByZXR1cm47XG4vLyAgICAgfVxuXG4vLyAgICAgc2V0TG9hZGluZyh0cnVlKTtcbi8vICAgICB0cnkge1xuLy8gICAgICAgLy8gRXhlY3V0ZSBnYW1lIGxvZ2ljIHdpdGggYG5pbENvbXB1dGUuZXhlY3V0ZWAgKHJlcGxhY2Ugd2l0aCBhY3R1YWwgbG9naWMpXG4vLyAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBzb21lTW9ycmFHYW1lRXhlY3V0aW9uTG9naWMoY2xpZW50LCBwbGF5ZXJNb3ZlKTsgXG4vLyAgICAgICBzZXRPcHBvbmVudE1vdmUocmVzdWx0Lm9wcG9uZW50TW92ZSk7XG4vLyAgICAgICBzZXRHYW1lUmVzdWx0KHJlc3VsdC5nYW1lUmVzdWx0KTtcbi8vICAgICB9IGNhdGNoIChlcnJvcikge1xuLy8gICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIGV4ZWN1dGluZyBNb3JyYSBHYW1lOlwiLCBlcnJvcik7XG4vLyAgICAgICBzZXRHYW1lUmVzdWx0KFwiQW4gZXJyb3Igb2NjdXJyZWQuXCIpO1xuLy8gICAgIH0gZmluYWxseSB7XG4vLyAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbi8vICAgICB9XG4vLyAgIH07XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8ZGl2IGNsYXNzTmFtZT1cImJvcmRlciBib3JkZXItZ3JheS00MDAgcm91bmRlZC1sZyBwLTQgdy1mdWxsIG1heC13LW1kXCI+XG4vLyAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC0yeGwgZm9udC1ib2xkIG1iLTRcIj5Nb3JyYSBHYW1lPC9oMj5cbi8vICAgICAgIDxwIGNsYXNzTmFtZT1cIm1iLTRcIj5DaG9vc2UgYSBtb3ZlIChudW1iZXIgb2YgZmluZ2VycyBzaG93bik6PC9wPlxuLy8gICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGdhcC0yIG1iLTRcIj5cbi8vICAgICAgICAge1swLCAxLCAyLCAzLCA0LCA1XS5tYXAoKG51bSkgPT4gKFxuLy8gICAgICAgICAgIDxidXR0b25cbi8vICAgICAgICAgICAgIGtleT17bnVtfVxuLy8gICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0UGxheWVyTW92ZShudW0pfVxuLy8gICAgICAgICAgICAgY2xhc3NOYW1lPXtgcHgtNCBweS0yIGJvcmRlciByb3VuZGVkICR7XG4vLyAgICAgICAgICAgICAgIHBsYXllck1vdmUgPT09IG51bSA/IFwiYmctYmx1ZS01MDAgdGV4dC13aGl0ZVwiIDogXCJiZy1ncmF5LTIwMCB0ZXh0LWJsYWNrXCJcbi8vICAgICAgICAgICAgIH1gfVxuLy8gICAgICAgICAgID5cbi8vICAgICAgICAgICAgIHtudW19XG4vLyAgICAgICAgICAgPC9idXR0b24+XG4vLyAgICAgICAgICkpfVxuLy8gICAgICAgPC9kaXY+XG4vLyAgICAgICA8YnV0dG9uXG4vLyAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZU1vdmVTdWJtaXNzaW9ufVxuLy8gICAgICAgICBkaXNhYmxlZD17bG9hZGluZyB8fCBwbGF5ZXJNb3ZlID09PSBudWxsfVxuLy8gICAgICAgICBjbGFzc05hbWU9e2BweC00IHB5LTIgYm9yZGVyIHJvdW5kZWQgJHtcbi8vICAgICAgICAgICBsb2FkaW5nIHx8IHBsYXllck1vdmUgPT09IG51bGxcbi8vICAgICAgICAgICAgID8gXCJvcGFjaXR5LTUwIGN1cnNvci1ub3QtYWxsb3dlZCBiZy1ncmF5LTIwMFwiXG4vLyAgICAgICAgICAgICA6IFwiYmctd2hpdGUgaG92ZXI6YmctZ3JheS0xMDBcIlxuLy8gICAgICAgICB9YH1cbi8vICAgICAgID5cbi8vICAgICAgICAge2xvYWRpbmcgPyAoXG4vLyAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ3LTUgaC01IGJvcmRlci10LTIgYm9yZGVyLWItMiBib3JkZXItZ3JheS05MDAgcm91bmRlZC1mdWxsIGFuaW1hdGUtc3BpblwiPjwvZGl2PlxuLy8gICAgICAgICApIDogKFxuLy8gICAgICAgICAgIFwiU3VibWl0IE1vdmVcIlxuLy8gICAgICAgICApfVxuLy8gICAgICAgPC9idXR0b24+XG4vLyAgICAgICB7Z2FtZVJlc3VsdCAmJiAoXG4vLyAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwibXQtNCBwLTQgYm9yZGVyLXRcIj5cbi8vICAgICAgICAgICA8cD5Zb3VyIE1vdmU6IHtwbGF5ZXJNb3ZlfTwvcD5cbi8vICAgICAgICAgICA8cD5PcHBvbmVudCdzIE1vdmU6IHtvcHBvbmVudE1vdmV9PC9wPlxuLy8gICAgICAgICAgIDxwPlJlc3VsdDoge2dhbWVSZXN1bHR9PC9wPlxuLy8gICAgICAgICA8L2Rpdj5cbi8vICAgICAgICl9XG4vLyAgICAgPC9kaXY+XG4vLyAgICk7XG4vLyB9O1xuXG4vLyAvLyBEdW1teSBhc3luYyBmdW5jdGlvbiBmb3IgaGFuZGxpbmcgZ2FtZSBsb2dpY1xuLy8gYXN5bmMgZnVuY3Rpb24gc29tZU1vcnJhR2FtZUV4ZWN1dGlvbkxvZ2ljKGNsaWVudCA6IGFueSwgcGxheWVyTW92ZTogbnVtYmVyKSB7XG4vLyAgIC8vIFJlcGxhY2UgdGhpcyB3aXRoIGFjdHVhbCBnYW1lIGNvbXB1dGF0aW9uIGxvZ2ljLlxuLy8gICBjb25zdCBvcHBvbmVudE1vdmUgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA2KTtcbi8vICAgY29uc3QgZ2FtZVJlc3VsdCA9XG4vLyAgICAgcGxheWVyTW92ZSA9PT0gb3Bwb25lbnRNb3ZlXG4vLyAgICAgICA/IFwiSXQncyBhIHRpZSFcIlxuLy8gICAgICAgOiBwbGF5ZXJNb3ZlID4gb3Bwb25lbnRNb3ZlXG4vLyAgICAgICA/IFwiWW91IHdpbiFcIlxuLy8gICAgICAgOiBcIllvdSBsb3NlIVwiO1xuLy8gICByZXR1cm4geyBvcHBvbmVudE1vdmUsIGdhbWVSZXN1bHQgfTtcbi8vIH1cbiJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsIk5hZGFWYWx1ZSIsIk5hZGFWYWx1ZXMiLCJOYW1lZFZhbHVlIiwiUGFydHlOYW1lIiwiUHJvZ3JhbUJpbmRpbmdzIiwidXNlTmlsQ29tcHV0ZSIsInVzZU5pbGxpb24iLCJDb21wdXRlIiwiY2xpZW50IiwibmlsQ29tcHV0ZSIsInByb2dyYW1JZCIsInNldFByb2dyYW1JZCIsInBsYXllcjFDaG9pY2UiLCJzZXRQbGF5ZXIxQ2hvaWNlIiwicGxheWVyMUd1ZXNzIiwic2V0UGxheWVyMUd1ZXNzIiwicGxheWVyMkNob2ljZSIsInNldFBsYXllcjJDaG9pY2UiLCJwbGF5ZXIyR3Vlc3MiLCJzZXRQbGF5ZXIyR3Vlc3MiLCJyZXN1bHQiLCJzZXRSZXN1bHQiLCJwbGF5R2FtZSIsIkVycm9yIiwiY29tcHV0ZXJDaG9pY2UiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJjb21wdXRlckd1ZXNzIiwiYmluZGluZ3MiLCJjcmVhdGUiLCJhZGRJbnB1dFBhcnR5IiwicGFyc2UiLCJwYXJ0eUlkIiwidmFsdWVzIiwiaW5zZXJ0IiwiY3JlYXRlU2VjcmV0SW50ZWdlciIsImV4ZWN1dGUiLCJpc1N1Y2Nlc3MiLCJyb3VuZFdpbm5lciIsImRhdGEiLCJkaXYiLCJjbGFzc05hbWUiLCJoMiIsImlucHV0IiwicGxhY2Vob2xkZXIiLCJ2YWx1ZSIsIm9uQ2hhbmdlIiwiZSIsInRhcmdldCIsInR5cGUiLCJtaW4iLCJtYXgiLCJwYXJzZUludCIsImJ1dHRvbiIsImlzTG9hZGluZyIsIm9uQ2xpY2siLCJkaXNhYmxlZCIsInAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/Compute.tsx\n"));

/***/ })

});